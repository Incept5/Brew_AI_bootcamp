
{
  "mcp_demo_config": {
    "version": "1.0.0",
    "description": "Configuration for MCP (Model Context Protocol) demonstration",
    "servers": [
      {
        "name": "Workshop Tools Server",
        "description": "Educational MCP server providing workshop tools and resources",
        "capabilities": {
          "tools": true,
          "resources": true,
          "async_processing": true,
          "error_handling": true
        },
        "tools": [
          {
            "name": "read_file",
            "category": "file_operations",
            "safety_level": "low_risk"
          },
          {
            "name": "web_search",
            "category": "information_retrieval",
            "safety_level": "low_risk"
          },
          {
            "name": "execute_python",
            "category": "code_execution",
            "safety_level": "medium_risk"
          },
          {
            "name": "analyze_data",
            "category": "data_processing",
            "safety_level": "low_risk"
          }
        ],
        "resources": [
          {
            "uri": "config://app/settings",
            "type": "configuration",
            "access_level": "read_only"
          },
          {
            "uri": "docs://api/reference",
            "type": "documentation",
            "access_level": "read_only"
          },
          {
            "uri": "data://workshop/examples",
            "type": "data",
            "access_level": "read_only"
          }
        ]
      }
    ],
    "demo_scenarios": [
      {
        "name": "basic_tool_usage",
        "description": "Demonstrate basic tool calling",
        "steps": [
          "list_tools",
          "call_read_file",
          "call_web_search"
        ]
      },
      {
        "name": "resource_access",
        "description": "Demonstrate resource reading",
        "steps": [
          "list_resources",
          "read_config",
          "read_documentation"
        ]
      },
      {
        "name": "multi_step_workflow",
        "description": "Complex workflow using multiple tools",
        "steps": [
          "read_config",
          "analyze_data",
          "execute_python",
          "generate_report"
        ]
      },
      {
        "name": "error_handling",
        "description": "Demonstrate error handling and recovery",
        "steps": [
          "attempt_invalid_operation",
          "handle_error",
          "recover_with_valid_operation"
        ]
      }
    ],
    "educational_notes": {
      "mcp_benefits": [
        "Standardized communication protocol",
        "Security through structured interfaces",
        "Tool discoverability and schema validation",
        "Separation of concerns between AI and tools",
        "Async processing capabilities"
      ],
      "real_world_applications": [
        "File system operations",
        "Database queries",
        "API integrations",
        "Code execution environments",
        "Data analysis pipelines",
        "Web scraping and search",
        "Cloud service integrations"
      ],
      "security_considerations": [
        "Input validation and sanitization",
        "Permission-based access control",
        "Sandboxed execution environments",
        "Audit logging of tool usage",
        "Rate limiting and timeouts"
      ]
    }
  }
}
